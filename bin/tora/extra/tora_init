#!/bin/bash
### BEGIN INIT INFO
# Provides:		  tora
# Required-Start:	$local_fs $remote_fs $network $syslog $named
# Required-Stop:	 $local_fs $remote_fs $network $syslog $named
# Default-Start:	 2 3 4 5
# Default-Stop:	  0 1 6
# X-Interactive:	 true
# Short-Description: Start/stop tora application server
# Description:	   Start the tora application server.
### END INIT INFO

NAME=tora
DESC="Tora app server"
DAEMON=/usr/bin/tora_safe
DAEMONOPTS=
DAEMON_PATH="/usr/lib/tora/"
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log

killtree() {
    local _pid=$1
    local _sig=${2:--TERM}
	kill -stop ${_pid} # needed to stop quickly forking parent from producing children between child killing and parent killing
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
		killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}

case "$1" in
	start)
		printf "%-50s" "Starting $NAME..."
		cd $DAEMON_PATH
		PID=`$DAEMON $DAEMONOPTS >> $LOGFILE 2>&1 & echo $!`
		echo "Saving PID" $PID " to " $PIDFILE
		if [ -z $PID ]; then
			printf "%s\n" "Fail"
		else
			echo $PID > $PIDFILE
			printf "%s\n" "Ok"
		fi
	;;

	status)
		printf "%-50s" "Checking $NAME..."
		if [ -f $PIDFILE ]; then
			PID=`cat $PIDFILE`
			if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
				printf "%s\n" "Process dead but pidfile exists"
			else
				echo "Running"
			fi
		else
			printf "%s\n" "Service not running"
		fi
	;;

	stop)
		printf "%-50s" "Stopping $NAME"
		PID=`cat $PIDFILE`
		cd $DAEMON_PATH
		if [ -f $PIDFILE ]; then
			killtree $PID KILL
			printf "%s\n" "Ok"
			rm -f $PIDFILE
		else
			printf "%s\n" "pidfile not found"
		fi
	;;

	restart)
		$0 stop
		$0 start
	;;

	*)
		echo "Usage: $0 {status|start|stop|restart}"
		exit 1
esac
